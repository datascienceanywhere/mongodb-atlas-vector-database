"use strict";(self.webpackChunkmongodb_atlas_vector_database=self.webpackChunkmongodb_atlas_vector_database||[]).push([[4893],{2806:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"mongosh-commands/insert-multiple-documents","title":"Insert Multiple Documents","description":"The insertMany() method allows you to insert multiple documents in a single operation, which is more efficient than inserting documents one by one.","source":"@site/docs/mongosh-commands/insert-multiple-documents.md","sourceDirName":"mongosh-commands","slug":"/mongosh-commands/insert-multiple-documents","permalink":"/mongodb-atlas-vector-database/docs/mongosh-commands/insert-multiple-documents","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/mongosh-commands/insert-multiple-documents.md","tags":[],"version":"current","frontMatter":{"sidebar-position":5},"sidebar":"tutorialSidebar","previous":{"title":"Insert One Document","permalink":"/mongodb-atlas-vector-database/docs/mongosh-commands/insert-documents"},"next":{"title":"Tutorial - Extras","permalink":"/mongodb-atlas-vector-database/docs/category/tutorial---extras"}}');var a=r(4848),s=r(8453);const i={"sidebar-position":5},o="Insert Multiple Documents",l={},c=[{value:"Basic Multiple Document Insertion",id:"basic-multiple-document-insertion",level:2},{value:"Response from insertMany()",id:"response-from-insertmany",level:2},{value:"insertMany() Options",id:"insertmany-options",level:2},{value:"Ordered vs Unordered Insertion",id:"ordered-vs-unordered-insertion",level:3},{value:"Write Concern Options",id:"write-concern-options",level:3},{value:"Inserting Documents with Complex Data Types",id:"inserting-documents-with-complex-data-types",level:2},{value:"Documents with Nested Objects",id:"documents-with-nested-objects",level:3},{value:"Documents with Arrays of Objects",id:"documents-with-arrays-of-objects",level:3},{value:"Inserting Documents with Different Data Types",id:"inserting-documents-with-different-data-types",level:2}];function m(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"insert-multiple-documents",children:"Insert Multiple Documents"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"insertMany()"})," method allows you to insert multiple documents in a single operation, which is more efficient than inserting documents one by one."]}),"\n",(0,a.jsx)(n.h2,{id:"basic-multiple-document-insertion",children:"Basic Multiple Document Insertion"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'// Insert multiple student documents\r\ndb.students.insertMany([\r\n    {\r\n        firstName: "John",\r\n        lastName: "Smith",\r\n        age: 20,\r\n        email: "john.smith@email.com",\r\n        major: "Computer Science",\r\n        gpa: 3.8,\r\n        enrolled: true,\r\n        enrollmentDate: new Date("2023-09-01"),\r\n        courses: ["CS101", "MATH201", "ENG102"]\r\n    },\r\n    {\r\n        firstName: "Emma",\r\n        lastName: "Johnson",\r\n        age: 19,\r\n        email: "emma.johnson@email.com",\r\n        major: "Mathematics",\r\n        gpa: 3.9,\r\n        enrolled: true,\r\n        enrollmentDate: new Date("2023-09-01"),\r\n        courses: ["MATH301", "STAT201", "CS101"]\r\n    },\r\n    {\r\n        firstName: "Michael",\r\n        lastName: "Brown",\r\n        age: 21,\r\n        email: "michael.brown@email.com",\r\n        major: "Physics",\r\n        gpa: 3.6,\r\n        enrolled: true,\r\n        enrollmentDate: new Date("2022-09-01"),\r\n        courses: ["PHYS301", "MATH401", "CHEM201"]\r\n    },\r\n    {\r\n        firstName: "Sarah",\r\n        lastName: "Davis",\r\n        age: 22,\r\n        email: "sarah.davis@email.com",\r\n        major: "Biology",\r\n        gpa: 3.7,\r\n        enrolled: false,\r\n        enrollmentDate: new Date("2021-09-01"),\r\n        courses: ["BIO401", "CHEM301", "STAT201"]\r\n    }\r\n])\n'})}),"\n",(0,a.jsx)(n.h2,{id:"response-from-insertmany",children:"Response from insertMany()"}),"\n",(0,a.jsxs)(n.p,{children:["When you run ",(0,a.jsx)(n.code,{children:"insertMany()"}),", MongoDB returns a response like this:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"{\r\n  acknowledged: true,\r\n  insertedIds: {\r\n    '0': ObjectId('65f1a2b3c4d5e6f7a8b9c0d1'),\r\n    '1': ObjectId('65f1a2b3c4d5e6f7a8b9c0d2'),\r\n    '2': ObjectId('65f1a2b3c4d5e6f7a8b9c0d3'),\r\n    '3': ObjectId('65f1a2b3c4d5e6f7a8b9c0d4')\r\n  }\r\n}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"insertmany-options",children:"insertMany() Options"}),"\n",(0,a.jsx)(n.h3,{id:"ordered-vs-unordered-insertion",children:"Ordered vs Unordered Insertion"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'// Ordered insertion (default) - stops on first error\r\ndb.students.insertMany([\r\n    {firstName: "Alex", lastName: "Wilson", age: 20, major: "Engineering"},\r\n    {firstName: "Lisa", lastName: "Taylor", age: 19, major: "Art"},\r\n    {firstName: "David", lastName: "Miller", age: 21, major: "History"}\r\n], {ordered: true})\r\n\r\n// Unordered insertion - continues even if some documents fail\r\ndb.students.insertMany([\r\n    {firstName: "Jessica", lastName: "Garcia", age: 20, major: "Psychology"},\r\n    {firstName: "Ryan", lastName: "Martinez", age: 22, major: "Business"},\r\n    {firstName: "Ashley", lastName: "Anderson", age: 19, major: "Chemistry"}\r\n], {ordered: false})\n'})}),"\n",(0,a.jsx)(n.h3,{id:"write-concern-options",children:"Write Concern Options"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'// Insert with write concern\r\ndb.students.insertMany([\r\n    {firstName: "Kevin", lastName: "Thomas", age: 20, major: "Economics"},\r\n    {firstName: "Amanda", lastName: "Jackson", age: 21, major: "Literature"}\r\n], {\r\n    writeConcern: {\r\n        w: "majority",\r\n        j: true,\r\n        wtimeout: 5000\r\n    }\r\n})\n'})}),"\n",(0,a.jsx)(n.h2,{id:"inserting-documents-with-complex-data-types",children:"Inserting Documents with Complex Data Types"}),"\n",(0,a.jsx)(n.h3,{id:"documents-with-nested-objects",children:"Documents with Nested Objects"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'db.students.insertMany([\r\n    {\r\n        firstName: "Robert",\r\n        lastName: "Lee",\r\n        age: 20,\r\n        email: "robert.lee@email.com",\r\n        major: "Computer Science",\r\n        gpa: 3.8,\r\n        enrolled: true,\r\n        personalInfo: {\r\n            phone: "+1-555-0123",\r\n            address: {\r\n                street: "123 Main St",\r\n                city: "Springfield",\r\n                state: "IL",\r\n                zipCode: "62701"\r\n            },\r\n            emergencyContact: {\r\n                name: "Jane Lee",\r\n                relationship: "Mother",\r\n                phone: "+1-555-0124"\r\n            }\r\n        },\r\n        academicInfo: {\r\n            semester: "Fall 2024",\r\n            year: "Junior",\r\n            credits: 15,\r\n            advisor: "Dr. Smith"\r\n        },\r\n        enrollmentDate: new Date("2022-09-01")\r\n    },\r\n    {\r\n        firstName: "Maria",\r\n        lastName: "Rodriguez",\r\n        age: 19,\r\n        email: "maria.rodriguez@email.com",\r\n        major: "Biology",\r\n        gpa: 3.9,\r\n        enrolled: true,\r\n        personalInfo: {\r\n            phone: "+1-555-0125",\r\n            address: {\r\n                street: "456 Oak Ave",\r\n                city: "Chicago",\r\n                state: "IL",\r\n                zipCode: "60601"\r\n            },\r\n            emergencyContact: {\r\n                name: "Carlos Rodriguez",\r\n                relationship: "Father",\r\n                phone: "+1-555-0126"\r\n            }\r\n        },\r\n        academicInfo: {\r\n            semester: "Fall 2024",\r\n            year: "Sophomore",\r\n            credits: 16,\r\n            advisor: "Dr. Johnson"\r\n        },\r\n        enrollmentDate: new Date("2023-09-01")\r\n    }\r\n])\n'})}),"\n",(0,a.jsx)(n.h3,{id:"documents-with-arrays-of-objects",children:"Documents with Arrays of Objects"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'db.students.insertMany([\r\n    {\r\n        firstName: "Christopher",\r\n        lastName: "White",\r\n        age: 21,\r\n        email: "chris.white@email.com",\r\n        major: "Engineering",\r\n        gpa: 3.7,\r\n        enrolled: true,\r\n        grades: [\r\n            {\r\n                course: "ENG201",\r\n                courseName: "Thermodynamics",\r\n                grade: "A",\r\n                credits: 3,\r\n                semester: "Spring 2024"\r\n            },\r\n            {\r\n                course: "MATH301",\r\n                courseName: "Calculus III",\r\n                grade: "B+",\r\n                credits: 4,\r\n                semester: "Spring 2024"\r\n            },\r\n            {\r\n                course: "PHYS201",\r\n                courseName: "Physics II",\r\n                grade: "A-",\r\n                credits: 3,\r\n                semester: "Fall 2023"\r\n            }\r\n        ],\r\n        activities: [\r\n            {\r\n                name: "Engineering Club",\r\n                role: "Vice President",\r\n                startDate: new Date("2023-01-15"),\r\n                active: true\r\n            },\r\n            {\r\n                name: "Math Tutoring",\r\n                role: "Tutor",\r\n                startDate: new Date("2023-08-20"),\r\n                active: true\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        firstName: "Jennifer",\r\n        lastName: "Clark",\r\n        age: 20,\r\n        email: "jennifer.clark@email.com",\r\n        major: "Psychology",\r\n        gpa: 3.85,\r\n        enrolled: true,\r\n        grades: [\r\n            {\r\n                course: "PSY301",\r\n                courseName: "Cognitive Psychology",\r\n                grade: "A",\r\n                credits: 3,\r\n                semester: "Spring 2024"\r\n            },\r\n            {\r\n                course: "STAT201",\r\n                courseName: "Statistics",\r\n                grade: "A-",\r\n                credits: 3,\r\n                semester: "Fall 2023"\r\n            },\r\n            {\r\n                course: "BIO101",\r\n                courseName: "General Biology",\r\n                grade: "B+",\r\n                credits: 4,\r\n                semester: "Fall 2023"\r\n            }\r\n        ],\r\n        activities: [\r\n            {\r\n                name: "Psychology Research Lab",\r\n                role: "Research Assistant",\r\n                startDate: new Date("2024-01-10"),\r\n                active: true\r\n            },\r\n            {\r\n                name: "Student Government",\r\n                role: "Senator",\r\n                startDate: new Date("2023-09-01"),\r\n                active: true\r\n            }\r\n        ]\r\n    }\r\n])\n'})}),"\n",(0,a.jsx)(n.h2,{id:"inserting-documents-with-different-data-types",children:"Inserting Documents with Different Data Types"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'db.students.insertMany([\r\n    {\r\n        firstName: "Daniel",\r\n        lastName: "Lewis",\r\n        age: 22,\r\n        email: "daniel.lewis@email.com",\r\n        // String\r\n        major: "Computer Science",\r\n        // Number (Float)\r\n        gpa: 3.75,\r\n        // Boolean\r\n        enrolled: true,\r\n        // Date\r\n        enrollmentDate: new Date("2021-09-01"),\r\n        graduationDate: new Date("2025-05-15"),\r\n        // Array\r\n        skills: ["Python", "JavaScript", "Java", "SQL"],\r\n        // Null\r\n        internship: null,\r\n        // Object\r\n        scholarship: {\r\n            name: "Merit Scholarship",\r\n            amount: 5000,\r\n            renewable: true\r\n        }\r\n    },\r\n    {\r\n        firstName: "Nicole",\r\n        lastName: "Hall",\r\n        age: 19,\r\n        email: "nicole.hall@email.com",\r\n        major: "Art",\r\n        gpa: 3.6,\r\n        enrolled: true,\r\n        enrollmentDate: new Date("2023-09-01"),\r\n        graduationDate: new Date("2027-05-15"),\r\n        skills: ["Drawing", "Painting", "Digital Art", "Photography"],\r\n        internship: {\r\n            company: "Creative Agency",\r\n            position: "Design Intern",\r\n            startDate: new Date("2024-06-01"),\r\n            endDate: new Date("2024-08-31"),\r\n            paid: true\r\n        },\r\n        scholarship: null\r\n    }\r\n])\n'})})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>o});var t=r(6540);const a={},s=t.createContext(a);function i(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);